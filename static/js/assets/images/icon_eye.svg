var _path, _path2, _path3, _path4, _path5;
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import * as React from "react";
function SvgIconEye(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    width: 20,
    height: 20,
    viewBox: "0 0 20 20",
    fill: "none",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement("path", {
    d: "M15.7109 9.94531L17.5 13.0312",
    stroke: "white",
    strokeLinecap: "round",
    strokeLinejoin: "round"
  })), _path2 || (_path2 = /*#__PURE__*/React.createElement("path", {
    d: "M12.0469 11.6641L12.6016 14.8125",
    stroke: "white",
    strokeLinecap: "round",
    strokeLinejoin: "round"
  })), _path3 || (_path3 = /*#__PURE__*/React.createElement("path", {
    d: "M7.94531 11.6562L7.39062 14.8125",
    stroke: "white",
    strokeLinecap: "round",
    strokeLinejoin: "round"
  })), _path4 || (_path4 = /*#__PURE__*/React.createElement("path", {
    d: "M4.28125 9.94531L2.49219 13.0469",
    stroke: "white",
    strokeLinecap: "round",
    strokeLinejoin: "round"
  })), _path5 || (_path5 = /*#__PURE__*/React.createElement("path", {
    d: "M2.5 8.19531C3.8125 9.82031 6.21875 11.875 10 11.875C13.7813 11.875 16.1875 9.82031 17.5 8.19531",
    stroke: "white",
    strokeLinecap: "round",
    strokeLinejoin: "round"
  })));
}
const ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconEye);
export default __webpack_public_path__ + "static/media/icon_eye.a3a6924226105a9df21f960d6014e61d.svg";
export { ForwardRef as ReactComponent };